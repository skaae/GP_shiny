{
    "contents" : "# writes clinical data from haibekains and metabric and writes it to a csv file\n# use loadClinical to load a df\ncreate_clinical_table_haibekains <- function(path){\n### loads clinical data from \n# Haibe-Kains, B. et al., 2012. A Three-Gene Model to Robustly \n# Identify Breast Cancer Molecular Subtypes. JNCI Journal of the National \n# Cancer Institute, 104(4), pp.311–325.\n# available at http://compbio.dfci.harvard.edu/pubs/sbtpaper/\n\n# datafields\n#   samplename: tumor identifiers (string)\n#   dataset: name of the dataset (string)\n#   series: cohort of patient or batch if any; name of the dataset otherwise (string)\n#   id: identifier used in the original publication (string)\n#   er: estrogen receptor status by IHC (binary value 0/1)\n#   pgr: progesterone receptor status by IHC (binary value 0/1)\n#   her2: human epidermial growth factor 2 status by IHC/FISH (binary value 0/1)\n#   size: tumor size in cm (continuous)\n#   node: nodal status (binary value 0/1)\n#   age: age at diagnosis (continuous)\n#   grade: histological grade (ternary value 1/2/3)\n#   e/t.dmfs: event and time for distant metastasis-free survival\n#   e/t.rfs: event and time for relapse-free survival\n#   e/t.os: event and time for overall survival \n  load(file.path(path,\"DDB.RData\"))\n  df <- data.frame(ddb)\n  load(paste(path,\"/\",df$dataset[1],\".RData\",sep=\"\"))\n  platform <- df[1,\"platform\"]\n  demo <- cbind(demo,platform)\n  res <- demo\n    for (i in 2:nrow(df)){\n      load(paste(path,\"/\",df$dataset[i],\".RData\",sep=\"\"))\n      platform <- df[i,\"platform\"]\n      demo <- cbind(demo,platform)\n      res <- rbind(res,demo)\n    }\n  \n  \n  col = colnames(res) \n  col[19] <- \"treatment_any\"\n  colnames(res) <- col\n  res$treatment_any = 1*(res$treatment_any > 0)\n  \n  res$treatment_RT = 0 \n  res$treatment_HT =0  \n  res$treatment_CT = 0   \n  patient_id <- rownames(res)\n  \n  her2.combined <- apply(res,1,function(x) if (!is.na(x[\"her2\"])) x[\"her2\"] else  x[\"her2.Expr\"]) \n  her2.combined <- as.numeric(her2.combined)\n  er.combined <- apply(res,1,function(x) if (!is.na(x[\"er\"])) x[\"er\"] else  x[\"er.Expr\"]) \n  er.combined <- as.numeric(er.combined)\n  \n  pgr.combined <- apply(res,1,function(x) if (!is.na(x[\"pgr\"])) x[\"er\"] else  x[\"pgr.Expr\"]) \n  pgr.combined <- as.numeric(pgr.combined)\n  \n  t.combined <- apply(res,1,function(x) if (!is.na(x[\"t.os\"])) x[\"t.os\"] else  x[\"t.rfs\"]) \n  t.combined <- as.numeric(t.combined)\n  \n  e.combined <- apply(res,1,function(x) if (!is.na(x[\"e.os\"])) x[\"e.os\"] else  x[\"e.rfs\"]) \n  e.combined <- as.numeric(e.combined)\n  \n  \n  res <- cbind(res, her2.combined,er.combined,pgr.combined,t.combined,e.combined)\n  \n  \n  return(cbind(patient_id,res))\n}\n\ncreate_clincial_table_metabric <- function(path){\n# loads clinical data from\n# Curtis, C. et al., 2012. The genomic and transcriptomic architecture of 2,000 \n# breast tumours reveals novel subgroups. Nature, 486(7403), pp.346–352.\n#\n# avialable at\n# file for laoding METABRIC data from synapse. See curtis et. al\n# https://www.synapse.org/#!Synapse:syn1688369\n# https://www.synapse.org/#!Synapse:syn1688370\n# where the second link is osloval set\n  n_patients = 1981\n  data.clinical <- file.path(path,\"METABRIC_clinical.csv\")\n  data.os <- file.path(path,\"METABRIC_OS.csv\")  #overall survival\n  data.dss <- file.path(path,\"METABRIC_DSS.csv\")\n  readtab <- function(file) read.delim(file, \n                                       header=T,\n                                       sep=\",\",\n                                       na.strings=c(\"NA\"),\n                                       stringsAsFactors=F,\n                                       row.names=1)\n  \n \n  \n  table.clinical <- readtab(data.clinical)\n   \n  table.os <- readtab(data.os)\n  colnames(table.os) <- c(\"t.os\",\"e.os\")\n   table.dss <- readtab(data.dss)\n  colnames(table.dss) <- c(\"t.dss\",\"e.dss\")\n  tab <- cbind(table.clinical,table.os,table.dss)\n  \n  dataset <- \"METABRIC\"\n  samplename <- NA\n  series <- NA\n    id <- NA\n  er <- (tab$ER_IHC_status == \"pos\") * 1\n  er.Expr <- (tab$ER.Expr == \"+\") * 1\n  pgr <- NA\n  pgr.Expr <- (tab$PR.Expr == \"+\") * 1\n  \n  # map her2_ich_status >1 to positive\n  # 3+ er positiv,0-1+ er negativ, medens 2+ er muligt positiv\n  her2 <- (tab$HER2_IHC_status > 1) * 1\n  \n  her2.Expr <- (tab$Her2.Expr == \"+\") *1\n  size <- tab$size / 10\n  node <- tab$lymph_nodes_positive\n  age <- tab$age_at_diagnosis\n  grade <- tab$grade\n  t.dmfs <- NA\n  e.dmfs <- NA\n  t.rfs <- NA\n  e.rfs <- NA\n  t.os <- tab$t.os\n  e.os <- tab$e.os\n  t.dss <- tab$t.dss\n  e.dss <- tab$e.dss\n  tissue <- 1\n  treatment <- tab$Treatment\n  platform <- \"Illumina\"\n  \n  treatment_any <- 1*(table.clinical[,\"Treatment\"] != \"NONE\")\n  treatment_RT <- 1*grepl(\"RT\", table.clinical[,\"Treatment\"])\n  treatment_CT <- 1*grepl(\"CT\", table.clinical[,\"Treatment\"])\n  treatment_HT <- 1*grepl(\"HT\", table.clinical[,\"Treatment\"])\n\n  patient_id = rownames(table.clinical)\n  tab_ret <- data.frame(patient_id=patient_id,     # 1\n                        dataset=dataset,           # 2\n                        samplename=samplename,     # 3\n                        series=series,             # 4\n                        id=id,er=er,               # 5\n                        er.Expr=er.Expr,           # 6\n                        pgr=pgr,                   # 7\n                        pgr.Expr=pgr.Expr,         # 8\n                        her2=her2,                 # 9\n                        her2.Expr=her2.Expr,       # 10\n                        size=size,                 # 11\n                        node=node,                 # 12\n                        age=age,                   # 13\n                        grade=grade,               # 14\n                        t.dmfs=t.dmfs,             # 15\n                        e.dmfs=e.dmfs,             # 16\n                        t.rfs=t.rfs,               # 17\n                        e.rfs=e.rfs,               # 18\n                        t.os=t.os,                 # 19\n                        e.os=e.os,                 # 20\n                        t.dss=t.dss,               # 21\n                        e.dss=e.dss,               # 22\n                        tissue=tissue,             # 23\n                        treatment=treatment,       # 24\n                        platform=platform,         # 25\n                        treatment_any = treatment_any, # 26\n                        treatment_RT = treatment_RT,   # 27\n                        treatment_HT = treatment_HT,   # 28\n                        treatment_CT = treatment_CT)   # 29\n                        \n  rownames(tab_ret) <- patient_id\n  \n  \n  \n  \n  her2.combined <- apply(tab_ret,1,function(x) if (!is.na(x[\"her2\"])) x[\"her2\"] else  x[\"her2.Expr\"]) \n  her2.combined <- as.numeric(her2.combined)\n  er.combined <- apply(tab_ret,1,function(x) if (!is.na(x[\"er\"])) x[\"er\"] else  x[\"er.Expr\"]) \n  er.combined <- as.numeric(er.combined)\n  \n  pgr.combined <- apply(tab_ret,1,function(x) if (!is.na(x[\"pgr\"])) x[\"er\"] else  x[\"pgr.Expr\"]) \n  pgr.combined <- as.numeric(pgr.combined)\n  \n  t.combined <- apply(tab_ret,1,function(x) if (!is.na(x[\"t.os\"])) x[\"t.os\"] else  x[\"t.rfs\"]) \n  t.combined <- as.numeric(t.combined)\n  \n  e.combined <- apply(tab_ret,1,function(x) if (!is.na(x[\"e.os\"])) x[\"e.os\"] else  x[\"e.rfs\"]) \n  e.combined <- as.numeric(e.combined)\n  \n  \n  tab_ret <- cbind(tab_ret, her2.combined,er.combined,pgr.combined,t.combined,e.combined)\n  \n  return(tab_ret)\n}\n\nloadClinical <- function(path.metabric,path.haibekains,incHaibeKains,readOrig,nas_cutoff){\n  # wrapper for loading all data and merging it\n  #\n  # combines her2 and her2.expr and er and er.Expr but prefers her2 and er \n  # values\n  #\n  # TODO FIX TREATMENT TO SOME STANDARD FORMATTING....\n  if(!readOrig){ # read the original data\n    print(\"Reading saved data from:  Datasets/Processed/clincial_stacked.csv\")\n    tab.merged <- read.csv(\"Datasets/Processed/clincial_stacked.csv\")\n    print(paste0(\"Dimension of loaded data: \", dim(tab.merged)[1], \" by \", dim(tab.merged)[2]))\n  }else{  #read the saved table\n    print(\"Reading original data...\")\n    \n    include <- function(x){\n         #how many na's allowed\n      \n      #allow for nan_cufoff nans in this list\n      inc <- c(is.na(x[\"size\"]),is.na(x[\"node\"]), is.na(x[\"age\"]), is.na(x[\"grade\"]),\n               is.na(x[\"treatment_any\"]),is.na(x[\"her2.combined\"]), is.na(x[\"er.combined\"])\n      )\n      reqs <- all(!is.na(x[\"t.combined\"]), !is.na(x[\"e.combined\"])) #must have vals\n      nas <- sum(inc) <= nas_cutoff\n      return(nas & reqs)\n    }\n    #noget galt med merging haibekains har 2191 med nuværende settings.\n    tab.metabric <- create_clincial_table_metabric(path.metabric)\n    n.metabric <- nrow(tab.metabric)\n    inc.metabric <- apply(tab.metabric,1,include)\n    tab.metabric <- tab.metabric[inc.metabric,]\n    print(paste0(\"included from METABRIC: \",sum(inc.metabric), \" of \",n.metabric))\n    \n    if(incHaibeKains==T){    \n      \n      tab.haibekains <- create_clinical_table_haibekains(path.haibekains)\n      n.haibekains <- nrow(tab.haibekains)\n      inc.haibekains <- apply(tab.haibekains,1,include)\n      tab.haibekains <- tab.haibekains[inc.haibekains, ]\n      \n      tab.merged <- merge(tab.haibekains,tab.metabric,all.y=T,all.x=T)\n      inc.merged <- apply(tab.merged,1,include)\n      print(paste0(\"included from Haibekains: \",sum(inc.haibekains), \" of \",n.haibekains))\n      stopifnot(sum(inc.metabric) + sum(inc.haibekains) == sum(inc.merged))\n    }else{\n      tab.merged <- tab.metabric\n    }\n    \n    \n    # one patient has size given as -9 assume that it is 9\n    tab.merged$size <- abs(tab.merged$size)\n    write.csv(tab.merged,\"Datasets/Processed/clincial_stacked.csv\")\n  }\n  \n  return(tab.merged)\n}\n\nwrite_matlab <- function(tab,filename,get_cols=FALSE){\n  # writes data in format that matlab will read. I.e NA replaced by NAN\n                  # NAME           COLUMN\n  matlab_cols <- c(\"er\",            # 1\n                   \"pgr\",           # 2\n                   \"her2\",          # 3\n                   \"size\",          # 4\n                   \"node\",          # 5\n                   \"age\",           # 6\n                   \"grade\",         # 7\n                   \"t.dmfs\",        # 8\n                   \"e.dmfs\",        # 9\n                   \"t.rfs\",         # 10\n                   \"e.rfs\",         # 11\n                   \"t.os\",          # 12\n                   \"e.os\",          # 13\n                   \"er.Expr\",       # 14\n                   \"pgr.Expr\",      # 15\n                   \"her2.Expr\",     # 16\n                   \"t.dss\",         # 17\n                   \"e.dss\",         # 18\n                   \"her2.combined\", # 19\n                   \"er.combined\",   # 20\n                   \"pgr.combined\",  # 21\n                   \"treatment_any\", # 22\n                   \"treatment_RT\",  # 23\n                   \"treatment_HT\",   # 24\n                   \"treatment_CT\", # 25\n                   \"t.combined\",   # 26\n                   \"e.combined\")  # 27\nif(!get_cols){ \nwrite.table(file=filename,\n              tab[,matlab_cols],\n              row.names=F,col.names=F,sep=\",\",na=\"NaN\",quote=FALSE) \n}\n  else{\n  return(matlab_cols)\n  }\n\n}\n\n",
    "created" : 1387205635654.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1176518264",
    "id" : "478FC828",
    "lastKnownWriteTime" : 1387443789,
    "path" : "~/Documents/Speciale/breast_cancer/R_files/load_all_clinical.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}